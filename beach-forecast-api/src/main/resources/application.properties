# Datasource
spring.datasource.url=${DATASOURCE_URL}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# JWT
api.security.token.secret=${JWT_SECRET}

# Redis
cache.port=${CACHE_PORT}
cache.host=${CACHE_HOST}
cache.password=${CACHE_PASSWORD}
spring.data.redis.repositories.enabled=false
spring.cache.redis.cache-null-values=false
spring.data.redis.jedis.pool.enabled=true

# Hazelcast
spring.cache.type=jcache
spring.cache.jcache.provider=com.hazelcast.cache.impl.HazelcastServerCachingProvider
spring.cache.hazelcast.config=classpath:hazelcast.xml
spring.main.allow-bean-definition-overriding=true

# Bucket4J
bucket4j.enabled=true

bucket4j.filters[0].cache-name=rate-limit
bucket4j.filters[0].filter-order=100
bucket4j.filters[0].url=.*
bucket4j.filters[0].rate-limits[0].execute-condition=@authorizationService.isAuthenticated()
bucket4j.filters[0].rate-limits[0].cache-key=@authorizationService.getAuthenticatedId()
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=10
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=minutes

bucket4j.filters[0].rate-limits[1].execute-condition=@authorizationService.isUnauthenticated()
bucket4j.filters[0].rate-limits[1].cache-key=getRemoteAddr()
bucket4j.filters[0].rate-limits[1].bandwidths[0].capacity=10
bucket4j.filters[0].rate-limits[1].bandwidths[0].time=1
bucket4j.filters[0].rate-limits[1].bandwidths[0].unit=minutes
